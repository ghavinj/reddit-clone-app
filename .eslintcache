[{"C:\\Users\\ghavinj\\Documents\\reddit-clone\\src\\index.js":"1","C:\\Users\\ghavinj\\Documents\\reddit-clone\\src\\App.js":"2","C:\\Users\\ghavinj\\Documents\\reddit-clone\\src\\app.js":"3","C:\\Users\\ghavinj\\Documents\\reddit-clone\\src\\components\\post.js":"4","C:\\Users\\ghavinj\\Documents\\reddit-clone\\src\\lib\\firebase.js":"5","C:\\Users\\ghavinj\\Documents\\reddit-clone\\src\\components\\navbar.js":"6","C:\\Users\\ghavinj\\Documents\\reddit-clone\\src\\components\\add-new-post.js":"7","C:\\Users\\ghavinj\\Documents\\reddit-clone\\src\\components\\vote-buttons.js":"8"},{"size":286,"mtime":1606831278837,"results":"9","hashOfConfig":"10"},{"size":109,"mtime":1606828995978,"results":"11","hashOfConfig":"10"},{"size":1503,"mtime":1606835358263,"results":"12","hashOfConfig":"10"},{"size":419,"mtime":1606835537623,"results":"13","hashOfConfig":"10"},{"size":610,"mtime":1606830161828,"results":"14","hashOfConfig":"10"},{"size":461,"mtime":1606834531439,"results":"15","hashOfConfig":"10"},{"size":2013,"mtime":1606834743779,"results":"16","hashOfConfig":"10"},{"size":3467,"mtime":1606838859965,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1uu8jgd",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\ghavinj\\Documents\\reddit-clone\\src\\index.js",[],["38","39"],"C:\\Users\\ghavinj\\Documents\\reddit-clone\\src\\App.js",[],"C:\\Users\\ghavinj\\Documents\\reddit-clone\\src\\app.js",["40","41"],"import { Container, Flex, Spinner, VStack } from \"@chakra-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Post from \"./components/post\";\r\nimport Navbar from \"./components/navbar\";\r\nimport db from \"./lib/firebase\";\r\n\r\n\r\nconst App = () => {\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Hook to handle the initial fetching of setPosts\r\n\r\n    db.collection(\"posts\")\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const data = querySnapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n\r\n        setPosts(data);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    //Hook to handle the real-time updating of posts whenever there is a\r\n    //change in the datastore (https://firebase.googl.com/docs/firestore/quey-data/listen#view_changes_between_snapshots)\r\n\r\n    db.collection(\"posts\")\r\n    .orderBy(\"createdAt\", \"desc\")\r\n    .onSnapshot((querySnapshot) => {\r\n      const _posts = [];\r\n\r\n      querySnapshot.forEach((doc) => {\r\n          _posts.push({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          });\r\n      });\r\n      setPosts(_posts);\r\n    });\r\n  });\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Container maxW=\"md\" centerContent p={8}>\r\n        <VStack spacing={8} w=\"100%\">\r\n        {posts.map((post) => (\r\n          <Post post={post} key={post.id} />\r\n        ))}\r\n        </VStack>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\ghavinj\\Documents\\reddit-clone\\src\\components\\post.js",[],"C:\\Users\\ghavinj\\Documents\\reddit-clone\\src\\lib\\firebase.js",[],"C:\\Users\\ghavinj\\Documents\\reddit-clone\\src\\components\\navbar.js",[],"C:\\Users\\ghavinj\\Documents\\reddit-clone\\src\\components\\add-new-post.js",["42","43"],"import {\r\n  Button,\r\n  FormControl,\r\n  FormLabel,\r\n  Textarea,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  HStack,\r\n  useDisclosure,\r\n}from \"@chakra-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport db from \"../lib/firebase\";\r\n\r\nconst AddNewPost = () => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [title, setTitle] = useState(\"\");\r\n  const [isSaving, setSaving] = useState(false);\r\n\r\n  const handleSubmit = async () => {\r\n    const date = new Date();\r\n\r\n    await db.collection(\"posts\").add({\r\n      title,\r\n      upVotesCount: 0,\r\n      downVotesCount: 0,\r\n      createdAt: date.toUTCString(),\r\n      updatedAt: date.toUTCString(),\r\n    });\r\n    onClose();\r\n    setTitle(\"\");\r\n  };\r\n  return (\r\n    <>\r\n      <Button onClick={onOpen} colorScheme=\"blue\">\r\n        Add new post\r\n      </Button>\r\n\r\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n        <ModalOverlay>\r\n          <ModalContent>\r\n            <ModalHeader>Add new post</ModalHeader>\r\n            <ModalCloseButton />\r\n            <ModalBody>\r\n              <FormControl id=\"post-title\">\r\n                <FormLabel>Post title</FormLabel>\r\n                <Textarea\r\n                  type=\"post-title\"\r\n                  value={title}\r\n                  onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n              </FormControl>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <HStack spacing={4}>\r\n                <Button onClick={onClose}>Close</Button>\r\n                <Button\r\n                  onClick={handleSubmit}\r\n                  colorScheme=\"blue\"\r\n                  disabled={!title.trim()}\r\n                  isLoading={isSaving}\r\n                >\r\n                Save\r\n                </Button>\r\n              </HStack>\r\n            </ModalFooter>\r\n          </ModalContent>\r\n        </ModalOverlay>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddNewPost;\r\n",["44","45"],"C:\\Users\\ghavinj\\Documents\\reddit-clone\\src\\components\\vote-buttons.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":1,"column":21,"nodeType":"52","messageId":"53","endLine":1,"endColumn":25},{"ruleId":"50","severity":1,"message":"54","line":1,"column":27,"nodeType":"52","messageId":"53","endLine":1,"endColumn":34},{"ruleId":"50","severity":1,"message":"55","line":16,"column":27,"nodeType":"52","messageId":"53","endLine":16,"endColumn":36},{"ruleId":"50","severity":1,"message":"56","line":22,"column":20,"nodeType":"52","messageId":"53","endLine":22,"endColumn":29},{"ruleId":"46","replacedBy":"57"},{"ruleId":"48","replacedBy":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'Flex' is defined but never used.","Identifier","unusedVar","'Spinner' is defined but never used.","'useEffect' is defined but never used.","'setSaving' is assigned a value but never used.",["59"],["60"],"no-global-assign","no-unsafe-negation"]